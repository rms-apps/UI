[{"/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/eslint.config.js":"1","/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/index.ts":"2","/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/src/ModalWrapper/index.tsx":"3","/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/src/ModalWrapperHeader/index.tsx":"4","/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/src/index.ts":"5"},{"size":77,"mtime":1761267281728,"results":"6","hashOfConfig":"7"},{"size":23,"mtime":1761267281729,"results":"8","hashOfConfig":"7"},{"size":2186,"mtime":1761267281729,"results":"9","hashOfConfig":"7"},{"size":1942,"mtime":1761267333520,"results":"10","hashOfConfig":"7"},{"size":32,"mtime":1761267281730,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"163nfxm",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/eslint.config.js",[],[],"/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/index.ts",[],[],"/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/src/ModalWrapper/index.tsx",[],[],"/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/src/ModalWrapperHeader/index.tsx",["27"],["28"],"/Users/heaven/Desktop/Development/React Native/UI/packages/ModalWrapper/src/index.ts",[],[],{"ruleId":"29","severity":1,"message":"30","line":21,"column":14,"nodeType":"31","messageId":"32","endLine":21,"endColumn":46,"suggestions":"33"},{"ruleId":"34","severity":2,"message":"35","line":21,"column":42,"nodeType":"36","messageId":"37","endLine":21,"endColumn":45,"suggestions":"38","suppressions":"39"},"no-unused-vars","'event' is defined but never used.","Identifier","unusedVar",["40"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["41","42"],["43"],{"messageId":"44","data":"45","fix":"46","desc":"47"},{"messageId":"48","fix":"49","desc":"50"},{"messageId":"51","fix":"52","desc":"53"},{"kind":"54","justification":"55"},"removeVar",{"varName":"56"},{"range":"57","text":"55"},"Remove unused variable 'event'.","suggestUnknown",{"range":"58","text":"59"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"60","text":"61"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.","directive","","event",[612,644],[640,643],"unknown",[640,643],"never"]